<template>
  <label wx:if="{{label!==null}}" style="{{'width:'+labelWidth}}">
    {{label}}
  </label>
  <view bindtap="onOpenModal" class="date-view">
    <text>{{value[0]}}年</text>
    <text>{{value[1]}}月</text>
    <text>{{value[2]}}日</text>
  </view>
  <sh-modal title="请选择日期" visible="{{modalVisible}}" bind:onConfirm="setDateValue">
    <view slot="modal-body">
      <picker-view indicator-style="height: 50rpx;" class="picker-view" value="{{dateArray}}"
                   bindchange="onChange">
        <picker-view-column>
          <view wx:for="{{years}}" class="picker-view-column" wx:key="{{item}}">{{item}}年</view>
        </picker-view-column>
        <picker-view-column>
          <view wx:for="{{months}}" class="picker-view-column" wx:key="{{item}}">{{item}}月</view>
        </picker-view-column>
        <picker-view-column>
          <view wx:for="{{days}}" class="picker-view-column" wx:key="{{item}}">{{item}}日</view>
        </picker-view-column>
      </picker-view>
    </view>
  </sh-modal>
</template>

<script>
const date = new Date()
const years = []
const months = []
const days = []

for (let i = 1990; i <= 2500; i++) {
    years.push(i)
}

for (let i = 1; i <= 12; i++) {
    months.push(i)
}

for (let i = 1; i <= 31; i++) {
    days.push(i)
}

export default {
    config: {
        usingComponents: {
            'sh-modal': '@showings-min/sh-modal'
        }
    },
    behaviors: ['wx://form-field'],
    properties: {
        name: String,
        value: {
            type: Array,
            value: [date.getFullYear(), date.getMonth() + 1, date.getDate()]
        },
        label: {
            type: String,
            value: null
        },
        labelWidth: {
            type: String,
            value: '120rpx'
        }
    },
    data: {
        modalVisible: false,
        years: years,
        months: months,
        days: days,
        year: date.getFullYear(),
        month: date.getMonth() + 1,
        day: date.getDay(),
        dateArray: [years.indexOf(date.getFullYear()), date.getMonth(), days.indexOf(date.getDate())]
    },
    methods: {
        onOpenModal () {
            this.setData({
                modalVisible: true
            })
        },
        onChange: function ({detail}) {
            const {value} = detail
            let temp = new Date(this.data.years[value[0]], this.data.months[value[1]])
            temp.setDate(0)
            let days = []
            for (let i = 1; i <= temp.getDate(); i++) {
                days.push(i)
            }
            this.setData({
                days: days
            })
            this.setData({
                year: this.data.years[value[0]],
                month: this.data.months[value[1]],
                day: days[value[2] >= days.length ? days.length - 1 : value[2]]
            })
            this.triggerEvent('onChange', {value: [this.data.year, this.data.month, this.data.day]})
        },
        setDateValue () {
            this.setData({
                value: [this.data.year, this.data.month, this.data.day]
            })
            this.triggerEvent('onConfirm', {value: this.data.value})
        }
    }
}


</script>

<style>
  sh-date-picker {
    display: flex;
    position: relative;
    align-items: center;
    width: 100%;
    padding: 15px 30px;
    box-sizing: border-box;
    background-color: #fff;
  }

  sh-date-picker:before {
    content: " ";
    position: absolute;
    top: 0;
    right: 0;
    height: 1px;
    border-top: 1px solid #D9D9D9;
    color: #D9D9D9;
    -webkit-transform-origin: 0 0;
    transform-origin: 0 0;
    -webkit-transform: scaleY(0.5);
    transform: scaleY(0.5);
    left: 30px;
  }

  sh-date-picker label {
    margin-right: 25px;
    font-size: 25px;
    text-align: right;
  }

  .picker-view {
    width: 100%;
    height: 300px;
  }

  .picker-view-column {
    line-height: 60px;
  }

  .date-view {
    font-size: 25px;
    flex-grow: 1;
  }

  .date-view text {
    margin-right: 15px;
  }

  form sh-form sh-date-picker:first-child:before,
  sh-form sh-date-picker:first-child:before {
    display: none;
  }

</style>
